---
server:
  port: 9999
eureka:
  client:
    service-url:
      defaultZone: http://172.16.23.36:9010/eureka
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true
spring:
  application:
    name: admin-client
  boot:
    admin:
      client:
        url: http://localhost:8900
  cloud:
    config:
      server:
        git:
          uri: http://gitlab.iwhalecloud.com/caichaoxiong/isap-config/
          searchPaths: master
          username: cai.chaoxiong@iwhalecloud.com
          password: awfifhvk
      label: master
  datasource:
    password: ztesoft
    driver-class-name: com.mysql.jdbc.Driver
    #url: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    url: jdbc:mysql://172.16.23.37:3306/oss_isap?characterEncoding=UTF-8
    #url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
  redis:
    host: 172.16.22.70
    password:
    port: 7680
    jedis:
      pool:
        max-idle: 100
        max-wait: 1000s
        max-active: -1
        min-idle: 1
mybatis:
  mapper-locations: classpath:mybatis/mapper/*.xml
  config-location: classpath:mybatis/mybatis-config.xml

logging:
  level:
    root: info
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
#sharding:
#  jdbc:
#    datasource:
#      names: ds_0,ds_1
#      ds_1:
#        password: root
#        type: org.apache.commons.dbcp.BasicDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/demo_ds_1
#        username: root
#      ds_0:
#        password: root
#        type: org.apache.commons.dbcp.BasicDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/demo_ds_0
#        username: root
#    config:
#      sharding:
#        tables:
#          t_order_item:
#            table-strategy:
#              inline:
#                sharding-column: order_id
#                algorithm-expression: t_order_item_$->{order_id % 2}
#            key-generator-column-name: order_item_id
#            actual-data-nodes: ds_$->{0..1}.t_order_item_$->{0..1}
#          t_order:
#            table-strategy:
#              inline:
#                sharding-column: order_id
#                algorithm-expression: t_order_$->{order_id % 2}
#            key-generator-column-name: order_id
#            actual-data-nodes: ds_$->{0..1}.t_order_$->{0..1}
#        default-database-strategy:
#          inline:
#            sharding-column: user_id
#            algorithm-expression: ds_$->{user_id % 2}
